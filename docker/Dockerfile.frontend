FROM node:18-alpine as build

WORKDIR /app

# Copy package files
COPY frontend/package.json frontend/package-lock.json ./

# Install dependencies
RUN npm ci --legacy-peer-deps

# Copy source files
COPY frontend/public ./public
COPY frontend/src ./src
COPY frontend/rollup.config.js ./
COPY frontend/tsconfig.json ./
COPY frontend/svelte.config.js ./

# Build the app
RUN npm run build

# Serve using lightweight nginx
FROM nginx:alpine

# Copy built files from build stage
COPY --from=build /app/public /usr/share/nginx/html

# Copy nginx config
COPY docker/nginx.conf /etc/nginx/conf.d/default.conf

EXPOSE 80

CMD ["nginx", "-g", "daemon off;"] 